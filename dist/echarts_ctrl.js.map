{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["PanelCtrl","_","echarts","EchartsCtrl","$scope","$injector","panelDefaults","EchartsOption","defaults","panel","events","on","onInitEditMode","bind","render","IS_DATA_CHANGED","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","option","height","row","isString","parseInt","replace","title","style","width","document","body","clientWidth","span","myChart","init","evil","fn","Fn","Function","resize","clear","eval","setOption","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,qB,kBAAAA,S;;AACFC,a;;AACAC,mB;;;;;;;;;;;;;;;;;;;;;mCAMMC,W;;;AAET,qCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,0IACrBD,MADqB,EACbC,SADa;;AAG3B,wBAAMC,gBAAgB;AAClBC,uCAAe;AADG,qBAAtB;;AAIAN,sBAAEO,QAAF,CAAW,MAAKC,KAAhB,EAAuBH,aAAvB;;AAEA,0BAAKI,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKG,MAAL,CAAYD,IAAZ,OAApC;AAV2B;AAW9B;;;;kDAEY;AACT,6BAAKE,eAAL,GAAuB,IAAvB;AACA,6BAAKD,MAAL;AACA,6BAAKC,eAAL,GAAuB,KAAvB;AACH;;;qDAEgB;AACb,6BAAKC,YAAL,CAAkB,SAAlB,EAA6B,kDAA7B,EAAiF,CAAjF;AACH;;;yCAEIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC3B,4BAAMC,kBAAkBH,KAAKI,IAAL,CAAU,oBAAV,EAAgC,CAAhC,CAAxB;AACA,4BAAIC,SAAS,EAAb;;AAEAH,6BAAKL,eAAL,GAAuB,IAAvB;;AAEA;AACA,4BAAIS,SAASJ,KAAKI,MAAL,IAAef,MAAMe,MAArB,IAA+BJ,KAAKK,GAAL,CAASD,MAArD;AACA,4BAAIvB,EAAEyB,QAAF,CAAWF,MAAX,CAAJ,EAAwB;AACpBA,qCAASG,SAASH,OAAOI,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAT,EAAmC,EAAnC,CAAT;AACH;AACJJ,kCAAU,CAAV;AACAA,kCAAUJ,KAAKX,KAAL,CAAWoB,KAAX,GAAmB,EAAnB,GAAwB,CAAlC;AACGR,wCAAgBS,KAAhB,CAAsBN,MAAtB,GAA+BA,SAAS,IAAxC;;AAEA;AACA,4BAAIO,QAAQC,SAASC,IAAT,CAAcC,WAA1B;AACAH,gCAAQ,CAACA,QAAQ,MAAM,CAAf,IAAoBX,KAAKX,KAAL,CAAW0B,IAA/B,GAAsC,EAAtC,GAA2C,MAAM,CAAjD,GAAqD,IAAI,CAAzD,GAA6D,KAAK,CAA1E;AACAd,wCAAgBS,KAAhB,CAAsBC,KAAtB,GAA8BA,QAAQ,IAAtC;;AAEA;AACA,4BAAIK,UAAUlC,QAAQmC,IAAR,CAAahB,eAAb,EAA8B,MAA9B,CAAd;;AAEA;AACA,iCAASiB,IAAT,CAAcC,EAAd,EAAkB;AACd,gCAAIC,KAAKC,QAAT,CADc,CACK;AACnB,mCAAO,IAAID,EAAJ,CAAO,YAAYD,EAAnB,GAAP;AACH;;AAED,iCAASzB,MAAT,GAAkB;AACd,gCAAI,CAACsB,OAAL,EAAc;AACV;AACH;;AAEDA,oCAAQM,MAAR;AACA,gCAAItB,KAAKL,eAAT,EAA0B;AACtBqB,wCAAQO,KAAR;AACH;;AAEDC,iCAAKxB,KAAKX,KAAL,CAAWF,aAAhB;AACA;;AAEA6B,oCAAQS,SAAR,CAAkBtB,MAAlB;AACH;;AAED,6BAAKb,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAY;AACjCG;AACAM,iCAAK0B,kBAAL;AACH,yBAHD;AAIH;;;;cA1E4B9C,S;;;;AA6EjCG,wBAAY4C,WAAZ,GAA0B,aAA1B","file":"echarts_ctrl.js","sourcesContent":["import { PanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport echarts from './libs/echarts';\r\nimport './libs/echarts-liquidfill';\r\nimport './libs/dark';\r\nimport './libs/china';\r\nimport './libs/beijing';\r\n\r\nexport class EchartsCtrl extends PanelCtrl {\r\n\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        const panelDefaults = {\r\n            EchartsOption: 'option = {}'\r\n        };\r\n\r\n        _.defaults(this.panel, panelDefaults);\r\n\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n    }\r\n\r\n    dataChanged(){\r\n        this.IS_DATA_CHANGED = true;\r\n        this.render();\r\n        this.IS_DATA_CHANGED = false;\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/grafana-echarts-panel/editor.html', 2);\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.echarts_container')[0];\r\n        let option = {};\r\n\r\n        ctrl.IS_DATA_CHANGED = true;\r\n\r\n        //init height\r\n        let height = ctrl.height || panel.height || ctrl.row.height;\r\n        if (_.isString(height)) {\r\n            height = parseInt(height.replace('px', ''), 10);\r\n        }\r\n\t    height -= 5;\r\n\t    height -= ctrl.panel.title ? 24 : 9;\r\n        $panelContainer.style.height = height + 'px';\r\n\r\n        //init width\r\n        let width = document.body.clientWidth;\r\n        width = (width - 5.6 * 2) * ctrl.panel.span / 12 - 5.6 * 2 - 1 * 2 - 10 * 2;\r\n        $panelContainer.style.width = width + 'px';\r\n\r\n        //init echarts\r\n        let myChart = echarts.init($panelContainer, 'dark');\r\n\r\n        //替代eval\r\n        function evil(fn) {\r\n            var Fn = Function; //一个变量指向Function，防止有些前端编译工具报错\r\n            return new Fn('return ' + fn)();\r\n        }\r\n\r\n        function render() {\r\n            if (!myChart) {\r\n                return;\r\n            }\r\n\r\n            myChart.resize();\r\n            if (ctrl.IS_DATA_CHANGED) {\r\n                myChart.clear();\r\n            }\r\n\r\n            eval(ctrl.panel.EchartsOption);\r\n            // evil(ctrl.panel.EchartsOption);\r\n\r\n            myChart.setOption(option);\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n}\r\n\r\nEchartsCtrl.templateUrl = 'module.html';\r\n"]}