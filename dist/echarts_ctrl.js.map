{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["PanelCtrl","_","echarts","EchartsCtrl","$scope","$injector","panelDefaults","EchartsOption","valueMaps","sensors","url","request","updateInterval","defaults","panel","events","on","onInitEditMode","bind","render","updateClock","that","xmlhttp","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","JSON","parse","responseText","success","data","dataChanged","open","send","$timeout","IS_DATA_CHANGED","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","option","echartsData","height","row","isString","parseInt","replace","title","style","width","document","body","clientWidth","span","myChart","init","callInterval","timeout","result","func","callBack","interval","context","args","arguments","clearTimeout","setInterval","apply","resize","clear","eval","setOption","renderingCompleted","templateUrl"],"mappings":"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","file":"echarts_ctrl.js","sourcesContent":["import { PanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport echarts from './libs/echarts';\r\nimport './libs/echarts-liquidfill';\r\nimport './libs/dark';\r\nimport './libs/china';\r\nimport './libs/beijing';\r\nimport './style.css!';\r\n\r\nexport class EchartsCtrl extends PanelCtrl {\r\n\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        const panelDefaults = {\r\n            EchartsOption: 'option = {}; \\n console.log(JSON.stringify(echartsData));',\r\n            valueMaps: [],\r\n            sensors: [],\r\n            url: '',\r\n            request: '',\r\n            updateInterval: 10000\r\n        };\r\n\r\n        _.defaults(this.panel, panelDefaults);\r\n        _.defaults(this.panel.EchartsOption, panelDefaults.EchartsOption);\r\n\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n\r\n        this.updateClock();\r\n    }\r\n\r\n    //post请求\r\n    updateClock() {\r\n        let that = this, xmlhttp;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        } else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                if (!JSON.parse(xmlhttp.responseText).success) return;\r\n                that.data = JSON.parse(xmlhttp.responseText).data;\r\n                that.dataChanged();\r\n            }\r\n        }\r\n\r\n        if (that.panel.url && that.panel.request) {\r\n            xmlhttp.open(\"POST\", that.panel.url, true);\r\n            xmlhttp.send(that.panel.request);\r\n        }\r\n\r\n        this.$timeout(() => { this.updateClock(); }, that.panel.updateInterval);\r\n    }\r\n\r\n    dataChanged() {\r\n        this.IS_DATA_CHANGED = true;\r\n        this.render();\r\n        this.IS_DATA_CHANGED = false;\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/grafana-echarts-panel/editor.html', 2);\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.echarts_container')[0];\r\n        let option = {},\r\n            echartsData = [];\r\n\r\n        ctrl.IS_DATA_CHANGED = true;\r\n\r\n        //init height\r\n        let height = ctrl.height || panel.height || ctrl.row.height;\r\n        if (_.isString(height)) {\r\n            height = parseInt(height.replace('px', ''), 10);\r\n        }\r\n        height -= 5;\r\n        height -= ctrl.panel.title ? 24 : 9;\r\n        $panelContainer.style.height = height + 'px';\r\n\r\n        //init width\r\n        let width = document.body.clientWidth;\r\n        width = (width - 5.6 * 2) * ctrl.panel.span / 12 - 5.6 * 2 - 1 * 2 - 10 * 2;\r\n        $panelContainer.style.width = width + 'px';\r\n\r\n        //init echarts\r\n        let myChart = echarts.init($panelContainer, 'dark');\r\n\r\n        //替代eval\r\n        // function evil(fn) {\r\n        //     var Fn = Function; //一个变量指向Function，防止有些前端编译工具报错\r\n        //     return new Fn('return ' + fn)();\r\n        // }\r\n\r\n        // function debounce(func, wait, immediate) {\r\n        //     let timeout, result;\r\n\r\n        //     let debounced = function () {\r\n        //         let context = this;\r\n        //         let args = arguments;\r\n\r\n        //         if (timeout) clearTimeout(timeout);\r\n\r\n        //         if (immediate) {\r\n        //             let callNow = !timeout;\r\n\r\n        //             timeout = setTimeout(function () {\r\n        //                 timeout = null;\r\n        //             }, wait);\r\n\r\n        //             if (callNow) result = func.apply(context, args);\r\n        //         } else {\r\n        //             timeout = setTimeout(function () {\r\n        //                 result = func.apply(context, args);\r\n        //             }, wait);\r\n        //         }\r\n        //         return result;\r\n        //     }\r\n\r\n        //     debounced.cancel = function () {\r\n        //         clearTimeout(timeout);\r\n        //         timeout = null;\r\n        //     }\r\n\r\n        //     return debounced;\r\n        // }\r\n\r\n        // 计时器容器，防止重复触发计时事件\r\n        var callInterval = function () {\r\n            var timeout, result;\r\n\r\n            function func(callBack, interval) {\r\n                var context = this;\r\n                var args = arguments;\r\n\r\n                if (timeout) clearTimeout(timeout);\r\n\r\n                timeout = setInterval(function () {\r\n                    result = callBack.apply(context, args);\r\n                }, interval);\r\n\r\n                return result;\r\n            }\r\n\r\n            return func;\r\n        }();\r\n\r\n        function render() {\r\n            if (!myChart) {\r\n                return;\r\n            }\r\n            myChart.resize();\r\n\r\n            if (ctrl.IS_DATA_CHANGED) {\r\n                myChart.clear();\r\n                echartsData = ctrl.data;\r\n                eval(ctrl.panel.EchartsOption);\r\n                // evil(ctrl.panel.EchartsOption);\r\n                myChart.setOption(option);\r\n            }\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n}\r\n\r\nEchartsCtrl.templateUrl = 'module.html';\r\n"]}